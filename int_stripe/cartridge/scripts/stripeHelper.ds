/**
* Demandware Script File
* Contains helper functions.
*
*/
importPackage( dw.system );
importPackage( dw.svc );
importPackage( dw.io );
importPackage( dw.util );

/**
* Sets service headers.
*/
function setServiceHeaders(service : HTTPService) : HTTPService
{
	var apiKey : String = getApiKey();
    service.addHeader('apiKey', apiKey);
    service.addHeader('Authorization', 'Bearer ' + apiKey);

    return service;
}

/**
* Sets service parameters.
*/
function setServiceParams(service : HTTPService, params : dw.util.HashMap) : HTTPService
{
	var paramsIter : dw.util.Iterator = params.keySet().iterator();
	while (paramsIter.hasNext()) {
		var key = paramsIter.next();
		service.addParam(key, params.get(key));
	}

	return service;
}

/**
* Gets the StripeAPI key.
*/
function getApiKey() : String
{
	var apiKey : String = '';
	if ('stripeApiKey' in Site.current.preferences.custom && !empty(Site.current.preferences.custom.stripeApiKey)) {
		apiKey = Site.current.preferences.custom.stripeApiKey;
	}
	return apiKey;
}

/**
* Checks if Stripe is enabled.
*/
function isStripeEnabled() : Boolean
{
	var ccPaymentMethod : dw.order.PaymentMethod = dw.order.PaymentMgr.getPaymentMethod('CREDIT_CARD');
	if (!empty(ccPaymentMethod)) {
		var paymentProcessor : dw.order.PaymentProcessor = ccPaymentMethod.getPaymentProcessor();
		if (!empty(paymentProcessor) && paymentProcessor.ID.equals('STRIPE_CREDIT')) {
			return true;
		} else {
			return false;
		}
	} else {
		return false;
	}
}
/**
* Return list of records from product feed file
*/
function displayProductFeed() : List
{
	var filePath : String = empty(Site.getCurrent().getCustomPreferenceValue('stripeProductFeedDirectory')) ? 'src/stripe/feed' : Site.getCurrent().getCustomPreferenceValue('stripeProductFeedDirectory');
	var fileName : String = empty(Site.getCurrent().getCustomPreferenceValue('stripeProductFeedFileName')) ? 'stripeProductFeed' + '.txt' : Site.getCurrent().getCustomPreferenceValue('stripeProductFeedFileName') + '.txt';
	var file : File = new File(File.IMPEX + File.SEPARATOR + filePath + File.SEPARATOR + fileName);
	var reader : FileReader = new FileReader(file);
	var lines : List = reader.getLines();
	reader.close();
	return lines;
}

/*
 * Module exports
 */
exports.DisplayProductFeed = displayProductFeed;
exports.SetServiceHeaders = setServiceHeaders;
exports.SetServiceParams = setServiceParams;
exports.IsStripeEnabled = isStripeEnabled;
