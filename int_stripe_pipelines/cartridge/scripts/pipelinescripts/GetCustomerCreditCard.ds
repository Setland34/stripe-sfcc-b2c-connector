/**
 * Selects a customer credit card and returns the details of the credit card as
 * JSON response. Required to fill credit card form with details of selected
 * credit card.
*
 * @input CreditCardUUID : String UUID of the credit card payment instrument to find
 * @input CustomerPaymentInstruments : dw.util.Collection the payment instruments to search
 * @output CreditCardPaymentInstrument : Object the payment instrument with the given UUID
*/
importPackage( dw.system );

function execute( pdict : PipelineDictionary ) : Number
{
	var uuid : String = pdict.CreditCardUUID;
	var instruments : Collection = pdict.CustomerPaymentInstruments;
	var creditCardInstrument : dw.customer.CustomerPaymentInstrument = null;

	// ensure mandatory parameter 'CreditCardUUID' and 'CustomerPaymentInstruments' 
	// in pipeline dictionary and collection is not empty
	if( uuid == null || instruments == null || instruments.empty)
	{
		return PIPELET_ERROR;
	}
	
	// find credit card in payment instruments
	var instrumentsIter : Iterator = instruments.iterator();
	while (instrumentsIter.hasNext()) {
    	creditCardInstrument = instrumentsIter.next();
        if (uuid.equals(creditCardInstrument.UUID)) {
        	var cardType : String = creditCardInstrument.creditCardType;
        	switch (cardType) {
			    case 'MasterCard':
			    	cardType = 'Master Card';
			    break;
			    case 'American Express':
			    	cardType = 'Amex';
			    break;
			    case 'Diners Club':
			    	cardType = 'DinersClub';
			    break;
			    default:
			    break;
        	}
        	creditCardInstrument.creditCardType = cardType;
        	pdict.CreditCardPaymentInstrument = creditCardInstrument;
        	return PIPELET_NEXT;
        }
    }
	pdict.CreditCardPaymentInstrument = null;

   return PIPELET_NEXT;
}
