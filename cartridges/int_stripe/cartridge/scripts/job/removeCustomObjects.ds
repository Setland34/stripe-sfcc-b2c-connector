var Transaction = require('dw/system/Transaction');

var StripeHelper = require('*/cartridge/scripts/stripeHelper');
var logger = require('dw/system/Logger').getLogger('Stripe', 'stripe');
/*
* Job start execution point
* Query and delete all stripe CO based on status parameter
*/
function execute(args) {
	var customObjectStatus = args.customObjectStatus.toString();
	if (!empty(customObjectStatus)){
		try {
			var queryString = "custom.processingStatus='" + dw.util.StringUtils.trim(customObjectStatus)  + "'";
			if (customObjectStatus.indexOf(',') != -1) {
				var customObjectStatusList = customObjectStatus.split(',');	
				if (customObjectStatusList.length > 0) {
					queryString = "";
					var count = 0;
					for (var i = 0; i < customObjectStatusList.length; i++) {
						var statusName = customObjectStatusList[i];
						if (!empty(dw.util.StringUtils.trim(statusName))) {
							queryString += "(custom.processingStatus='" + dw.util.StringUtils.trim(statusName) + "')";
							count++;
							if (count < customObjectStatusList.length && !empty(dw.util.StringUtils.trim(customObjectStatusList[i+1]))) {
			    		 		queryString += " OR "; 
			    	 		}
						}
					}
				}
			}
			var stripeObjectsIter = dw.object.CustomObjectMgr.queryCustomObjects(StripeHelper.GetCustomObjectNotificationType(), queryString, null);
			
			while (stripeObjectsIter.hasNext()) {
				var stripeNoficationObject = stripeObjectsIter.next();
	       		Transaction.wrap(function (){
	           		dw.object.CustomObjectMgr.remove(stripeNoficationObject);	
	       		});
			}
		} catch (e) {
			var debug = e;
			logger.error('Error: {0}', e.message);
		}
	}
}

module.exports = {
	'execute': execute
}